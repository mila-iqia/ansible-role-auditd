---
# tasks file for auditd

- name: Import assert.yml
  ansible.builtin.import_tasks:
    file: assert.yml
  run_once: true
  delegate_to: localhost

- name: Install requirements
  ansible.builtin.package:
    name: bash
    state: present

- name: Install audit
  ansible.builtin.package:
    name: "{{ auditd_packages }}"
    state: present

- name: Configure auditd
  ansible.builtin.template:
    src: "{{ auditd_config_file }}.j2"
    dest: "{{ auditd_config_directory }}/{{ auditd_config_file }}"
    mode: "0640"
  notify:
    - Restart auditd

- name: Create rules.d directory
  ansible.builtin.file:
    path: "{{ auditd_config_directory }}/rules.d"
    state: directory
    mode: "0750"

- name: Place custom.rules
  ansible.builtin.template:
    src: custom.rules.j2
    dest: "{{ auditd_config_directory }}/rules.d/custom.rules"
    mode: "0664"
  notify:
    - Run augenrules
  when:
    - auditd_manage_rules

- name: Configure syslog plugin for auditd
  community.general.ini_file:
    path: "{{ auditd_config_directory }}/plugins.d/syslog.conf"
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    mode: '0640'
    state: present
  loop: "{{ auditd_plugin_syslog | dict2items }}"
  when: auditd_plugin_syslog is defined

- name: Create a Seperate Journald Context for auditd
  when: auditd_journal_context is true
  block:
    - name: Create journald drop-in directory
      ansible.builtin.file:
        name: /etc/systemd/journald.conf.d/
        state: directory
        mode: "0755"

    - name: Create auditd Journal Context
      ansible.builtin.template:
        src: journald@audit.conf.j2
        dest: /etc/systemd/journald.conf.d/journald@audit.conf
        mode: "0644"
      notify:
        - Restart systemd-journald
        - Restart systemd-journald@audit

    - name: Restart Journald to Activate the New Context
      ansible.builtin.meta: flush_handlers

- name: Configure auditd to use this new context
  when: auditd_journal_context is true
  block:
    - name: Check whether override file exists
      ansible.builtin.stat:
        path: /etc/systemd/system/auditd.service
      register: auditd_service_override

    - name: Prepare the override file
      ansible.builtin.command:
        cmd: systemctl cat auditd.service
      when: auditd_service_override.stat.exists is false
      register: cat_auditd_service

    - name: Copy using inline content
      ansible.builtin.copy:
        content: "{{ cat_auditd_service.stdout }}"
        dest: /etc/systemd/system/auditd.service
      when: cat_auditd_service

    - name: Configure the Logging Context
      community.general.ini_file:
        path: /etc/systemd/system/auditd.service
        section: Service
        option: LogNamespace
        value: audit
        mode: "0644"
      notify:
        - Restart auditd
        - Restart systemd-journald

    - name: Restart Auditd to Activate the New Context
      ansible.builtin.meta: flush_handlers

- name: Start and enable auditd
  ansible.builtin.service:
    name: "{{ auditd_service }}"
    state: started
    enabled: true
  when:
    - auditd_start_service

- name: Start and enable systemd-journald@audit
  ansible.builtin.service:
    name: "systemd-journald@audit"
    state: started
    enabled: true
  when:
    - auditd_start_service
    - auditd_journal_context is true
